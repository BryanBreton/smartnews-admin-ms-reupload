# BDD
DATABASE_URL=jdbc:postgresql://localhost/docker
DATABASE_USERNAME=docker
DATABASE_PASSWORD=docker
HIBERNATE_SHOW_SQL=true
# Possibilité d'utiliser un utilisateur spécifique pour Flyway (avec des droits étendus pour l'écriture de schéma)
FLYWAY_USERNAME=${DATABASE_USERNAME}
FLYWAY_PASSWORD=${DATABASE_PASSWORD}

# Authentification
REF_UTILISATEUR_APPLI_URL=http://refutilisateur-ws-dev.groupement.systeme-u.fr/refutilisateurappli/
FORGEROCK_JWK_URI=https://wamwg-int.groupement.systeme-u.fr

# Actuator
ACTUATORH_USER=actuatorh
ACTUATORH_PASSWORD=$2a$10$k7Quh7TNFGNOFUDKSVBt.OMez5XdjXemG8l6n5EpTp3CbZsyqyME6
ACTUATORH_FUNCTIONS=ACTUATOR
ACTUATORM_USER=actuatorm
ACTUATORM_PASSWORD=$2a$10$k7Quh7TNFGNOFUDKSVBt.OMez5XdjXemG8l6n5EpTp3CbZsyqyME6
ACTUATORM_FUNCTIONS=ACTUATOR

# Proxy pour les accès Google Drive => ne pas utiliser en dev, laisser à vide
HTTP_PROXY_HOST=
HTTP_PROXY_PORT=
# Répertoire pour écrire les fichiers de credentials de Google, la racine est le chemin du projet IntelliJ
GOOGLE_CREDENTIALS_FOLDER_PATH=google_api_tokens/smartnews_admin_ms
GOOGLE_API_JSON_CREDENTIALS_B64=eyJpbnN0YWxsZWQiOnsiY2xpZW50X2lkIjoiNzI4ODc4NDg2ODM0LWFndTlnNm5uNjlkOTJkMWc2M2hrMGM1M3Nqa2lwOGtwLmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwicHJvamVjdF9pZCI6InJjby1zbWFydG5ld3MtZC11dHQ2IiwiYXV0aF91cmkiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvYXV0aCIsInRva2VuX3VyaSI6Imh0dHBzOi8vb2F1dGgyLmdvb2dsZWFwaXMuY29tL3Rva2VuIiwiYXV0aF9wcm92aWRlcl94NTA5X2NlcnRfdXJsIjoiaHR0cHM6Ly93d3cuZ29vZ2xlYXBpcy5jb20vb2F1dGgyL3YxL2NlcnRzIiwiY2xpZW50X3NlY3JldCI6IkdPQ1NQWC1CV3hxQ05YbUxra2FyRTY0MGFJMEY0XzhXX3NmIiwicmVkaXJlY3RfdXJpcyI6WyJodHRwOi8vbG9jYWxob3N0Il19fQ==
# En dev on passe par une variable d'environnement dans le lanceur IntelliJ
# GOOGLE_API_STORED_CREDENTIAL_B64=
GOOGLE_API_USERID=smartnews_admin_ms
# Séparés par des virgules
GOOGLE_API_DRIVE_SCOPES=DRIVE_METADATA_READONLY,DRIVE_FILE,DRIVE_READONLY,DRIVE
GOOGLE_API_READ_TIMEOUT_MILLISECONDS=10000
GOOGLE_API_CONNECT_TIMEOUT_MILLISECONDS=10000