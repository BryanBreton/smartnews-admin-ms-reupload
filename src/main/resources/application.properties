# Par défaut, le port est 8080 dans le conteneur
server.port=8080

# Configuration BDD
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=validate

# Flyway
spring.flyway.baseline-on-migrate=true
spring.flyway.user=${FLYWAY_USERNAME}
spring.flyway.password=${FLYWAY_PASSWORD}

# Autres
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS=false
spring.main.allow-bean-definition-overriding=true
spring.cache.ehcache.config=classpath:ehcache.xml
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=when-authorized
management.info.build.enabled=true
spring.mvc.pathmatch.matching-strategy=ant_path_matcher
# Affichage des requêtes SQL, désactivé par défaut
spring.jpa.show-sql=${HIBERNATE_SHOW_SQL:false}
springdoc.paths-to-exclude=/actuator/**

cache.iam-basic-auth.activate=true
cache.iam-tokens.activate=false

# Prise en compte des entêtes X-Forwarded-Host et X-Forwarded-Proto ajoutée par le proxy
server.forward-headers-strategy=NATIVE

# Affichage des infos git dans /actuator/info
management.info.git.mode=full

# Proxy pour les accès Google Drive
http.proxy.host=${HTTP_PROXY_HOST}
http.proxy.port=${HTTP_PROXY_PORT}
# Répertoire temporaire pour écrire les fichiers de credentials de Google
google.credentials.folder.path=${GOOGLE_CREDENTIALS_FOLDER_PATH}
google.api.json.credentials.base64=${GOOGLE_API_JSON_CREDENTIALS_B64}
google.api.stored.credential.base64=${GOOGLE_API_STORED_CREDENTIAL_B64}
google.api.userId=${GOOGLE_API_USERID}
google.api.drive.scopes=${GOOGLE_API_DRIVE_SCOPES}
google.api.read.timeout.milliseconds=${GOOGLE_API_READ_TIMEOUT_MILLISECONDS}
google.api.connect.timeout.milliseconds=${GOOGLE_API_CONNECT_TIMEOUT_MILLISECONDS}